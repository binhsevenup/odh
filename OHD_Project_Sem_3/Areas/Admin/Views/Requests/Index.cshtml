@model PagedList.IPagedList<OHD_Project_Sem_3.Areas.Admin.Models.Requests>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section _Header
{
    @Html.Partial("_HeaderLayout")
}
@section _LeftMenu
{
    @Html.Partial("_LeftMenu")
}
@section _headerPage
{
    <header class="page-header">
        <h2>List Request</h2>

        <div class="right-wrapper pull-right">
            <ol class="breadcrumbs">
                <li>
                    <a href="index.html">
                        <i class="fa fa-home"></i>
                    </a>
                </li>
                <li><span>Admin Manager / Request / List Request</span></li>
            </ol>

            <a class="sidebar-right-toggle"></a>
        </div>
    </header>
}
<div style="margin-top: 150px; padding: 0 30px 0 50px">
    <br />
    <h2 class="text-center text-bold" style="margin-bottom: 30px; margin-right: 100px">List Request</h2>

    <hr />
    <br />
    <br />
    <div class="row">

        <div class="col-md-6">
            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
        </div>
        <div class="col-md-6 "  >
            @using (Html.BeginForm("Index", "Requests", FormMethod.Get))
            {
                <p style="margin-left: 60%">
                    @Html.TextBox("Search", ViewBag.CurrentFilter as string)
                    <input type="submit" value="Search"/>
                </p>
            }
        </div>

    </div>
    @Html.Partial("_AlertMessage")
    <table class="table" style="margin-top: 15px">
        <tr>
            <th>
                @Html.ActionLink("Facility", "Index", new { sortOrder = ViewBag.NameRq, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Category", "Index", new { sortOrder = ViewBag.NameCate, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Requestor Id", "Index", new { sortOrder = ViewBag.IdRqt, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Assignee Id", "Index", new { sortOrder = ViewBag.IdAsn, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                Message
            </th>
            <th>
                @Html.ActionLink("Created At", "Index", new { sortOrder = ViewBag.CreatedRq, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Updated At", "Index", new { sortOrder = ViewBag.UpdatedRq, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusRq, currentFilter = ViewBag.CurrentFilter })

            </th>
            <th>Action</th>
        </tr>



        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Facility.FacilityName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FacilityCategory.FacilityCategory_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Requestor.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssgineeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remarks)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created_At)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated_At)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.RequestId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.RequestId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.RequestId })
                </td>
            </tr>
        }

    </table>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>



